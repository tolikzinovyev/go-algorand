load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "logging",
    srcs = [
        "collector.go",
        "cyclicWriter.go",
        "log.go",
        "logBuffer.go",
        "telemetry.go",
        "telemetryCommon.go",
        "telemetryConfig.go",
        "telemetryFilteredHook.go",
        "telemetryOperation.go",
        "telemetryhook.go",
        "testingLogger.go",
        "usage.go",
    ],
    importpath = "github.com/algorand/go-algorand/logging",
    visibility = ["//visibility:public"],
    deps = [
        "//config",
        "//logging/telemetryspec",
        "//util",
        "//util/metrics",
        "//util/s3",
        "@com_github_algorand_go_deadlock//:go_default_library",
        "@com_github_olivere_elastic//:go_default_library",
        "@com_github_satori_go_uuid//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@in_gopkg_sohlich_elogrus_v3//:go_default_library",
    ],
)

go_test(
    name = "logging_test",
    srcs = [
        "cyclicWriter_test.go",
        "logBuffer_test.go",
        "log_test.go",
        "telemetryConfig_test.go",
        "telemetry_test.go",
        "telemetryhook_test.go",
    ],
    embed = [":logging"],
    deps = [
        "//config",
        "//logging/telemetryspec",
        "@com_github_algorand_go_deadlock//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
    data = ["//test/testdata/configs/logging"]
)
