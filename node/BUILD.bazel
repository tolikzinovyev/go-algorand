load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "node",
    srcs = [
        "error.go",
        "impls.go",
        "msgp_gen.go",
        "netprio.go",
        "node.go",
        "nodeContext.go",
        "poolStats.go",
        "topAccountListener.go",
    ],
    importpath = "github.com/algorand/go-algorand/node",
    visibility = ["//visibility:public"],
    deps = [
        "//agreement",
        "//agreement/gossip",
        "//catchup",
        "//compactcert",
        "//config",
        "//crypto",
        "//data",
        "//data/account",
        "//data/basics",
        "//data/bookkeeping",
        "//data/committee",
        "//data/pools",
        "//data/transactions",
        "//data/transactions/verify",
        "//ledger",
        "//ledger/ledgercore",
        "//logging",
        "//logging/telemetryspec",
        "//network",
        "//network/messagetracer",
        "//node/indexer",
        "//protocol",
        "//rpcs",
        "//util/db",
        "//util/execpool",
        "//util/metrics",
        "//util/timers",
        "@com_github_algorand_go_deadlock//:go_default_library",
        "@com_github_algorand_msgp//msgp:go_default_library",
    ],
)

go_test(
    name = "node_test",
    srcs = [
        "assemble_test.go",
        "msgp_gen_test.go",
        "node_test.go",
        "topAccountListener_test.go",
    ],
    embed = [":node"],
    deps = [
        "//agreement",
        "//config",
        "//crypto",
        "//data",
        "//data/account",
        "//data/basics",
        "//data/bookkeeping",
        "//data/pools",
        "//data/transactions",
        "//logging",
        "//protocol",
        "//util",
        "//util/db",
        "//util/execpool",
        "@com_github_algorand_msgp//msgp:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
