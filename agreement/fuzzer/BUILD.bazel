load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "fuzzer",
    srcs = ["fuzzer.go"],
    importpath = "github.com/algorand/go-algorand/agreement/fuzzer",
    visibility = ["//visibility:public"],
)

go_test(
    name = "fuzzer_test",
    size = "large",
    srcs = [
        "bandwidthFilter_test.go",
        "catchupFilter_test.go",
        "clockedFilter_test.go",
        "dropMessageFilter_test.go",
        "duplicateMessageFilter_test.go",
        "filter_test.go",
        "fuzzer_test.go",
        "keyManager_test.go",
        "ledger_test.go",
        "messageDecoderFilter_test.go",
        "messageDelayFilter_test.go",
        "messageDuplicationFilter_test.go",
        "messagePriorityQueue_test.go",
        "messageReflectionFilter_test.go",
        "messageRegossipFilter_test.go",
        "messageReorderingFilter_test.go",
        "networkFacade_test.go",
        "nodeCrashFilter_test.go",
        "nullFilter_test.go",
        "router_test.go",
        "schedulerFilter_test.go",
        "tests_test.go",
        "topologyFilter_test.go",
        "trafficStatisticsFilter_test.go",
        "validator_test.go",
        "voteFilter_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":fuzzer"],
    deps = [
        "//agreement",
        "//agreement/gossip",
        "//config",
        "//crypto",
        "//data/account",
        "//data/basics",
        "//data/bookkeeping",
        "//data/committee",
        "//logging",
        "//network",
        "//protocol",
        "//util/db",
        "//util/timers",
        "@com_github_algorand_go_deadlock//:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
