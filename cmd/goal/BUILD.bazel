load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

go_library(
    name = "goal_lib",
    srcs = [
        "account.go",
        "accountsList.go",
        "application.go",
        "asset.go",
        "clerk.go",
        "commands.go",
        "common.go",
        "completion.go",
        "formatting.go",
        "inspect.go",
        "interact.go",
        "kmd.go",
        "ledger.go",
        "logging.go",
        "messages.go",
        "multisig.go",
        "network.go",
        "node.go",
        "tealsign.go",
        "wallet.go",
    ],
    importpath = "github.com/algorand/go-algorand/cmd/goal",
    visibility = ["//visibility:private"],
    deps = [
        "//config",
        "//crypto",
        "//crypto/passphrase",
        "//daemon/algod/api/client",
        "//daemon/algod/api/server/v2/generated",
        "//daemon/algod/api/spec/common",
        "//daemon/algod/api/spec/v1:spec",
        "//daemon/kmd/client",
        "//daemon/kmd/lib/kmdapi",
        "//data/account",
        "//data/basics",
        "//data/bookkeeping",
        "//data/transactions",
        "//data/transactions/logic",
        "//data/transactions/verify",
        "//ledger/ledgercore",
        "//libgoal",
        "//logging",
        "//netdeploy",
        "//network",
        "//nodecontrol",
        "//protocol",
        "//protocol/transcode",
        "//util",
        "//util/db",
        "//util/tokens",
        "@com_github_spf13_cobra//:cobra",
        "@com_github_spf13_cobra//doc",
        "@org_golang_x_crypto//ssh/terminal",
    ],
)

go_binary(
    name = "goal",
    embed = [":goal_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "goal_test",
    srcs = [
        "commands_test.go",
        "formatting_test.go",
        "inspect_test.go",
    ],
    embed = [":goal_lib"],
    deps = [
        "//crypto",
        "//data/basics",
        "//data/transactions",
        "//protocol",
        "@com_github_stretchr_testify//require",
    ],
)
